{
  "platform": "Android",
  "ascii_obfuscation_rate": 0.0,
  "short_name_obfuscation_rate": 5.557459447109893,
  "vulnerabilities": [
    {
      "id": "ExportedComponent",
      "name": "AndroidManifest Exported Components Checking",
      "description": "Found \"exported\" components (except for Launcher) for receiving outside applications' actions (`AndroidManifest.xml`). These components can be initialized by other apps and used maliciously.",
      "remediation": "Please modify the attribute in each of the exported component to `exported=\"false\"` or protect it with a custom permission with \"signature\" or higher protection level and specify it in \"android:permission\" attribute.",
      "references": {
        "text": "Further information on the exported attribute can be found on the Android Developer Guide [[1]].",
        "links": {
          "1": "http://developer.android.com/guide/topics/manifest/provider-element.html#exported"
        }
      },
      "owasp": [
        "M7"
      ],
      "cvss": {
        "attack_vector": "Adjacent",
        "attack_complexity": "Low",
        "privileges_required": "Low",
        "user_interaction": "None",
        "scope": "Unchanged",
        "confidentiality_impact": "Low",
        "integrity_impact": "Low",
        "availability_impact": "Low"
      },
      "code": [
        {
          "what": "exported activity \"com.example.mastg_test0033.SupportedWebView\"",
          "where": "AndroidManifest.xml",
          "full_path": "AndroidManifest.xml"
        }
      ]
    },
    {
      "id": "ExternalStorage",
      "name": "External Storage Accessing",
      "description": "Found external storage access API. Please remember not to write security-critical files to external storage.",
      "remediation": "Please revise all the external storage access in order to identify eventual leaks of critical information.",
      "references": {
        "text": "Further information on writing files can be found in the official documentation [[1]].",
        "links": {
          "1": "https://developer.android.com/training/basics/data-storage/files.html"
        }
      },
      "owasp": [
        "M2",
        "M7"
      ],
      "cvss": {
        "attack_vector": "Local",
        "attack_complexity": "Low",
        "privileges_required": "Low",
        "user_interaction": "None",
        "scope": "Unchanged",
        "confidentiality_impact": "Low",
        "integrity_impact": "Low",
        "availability_impact": "None"
      },
      "code": [
        {
          "what": "Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;",
          "where": "Landroidx/core/content/FileProvider;->parsePathStrategy(Landroid/content/Context; Ljava/lang/String; I)Landroidx/core/content/FileProvider$PathStrategy;",
          "full_path": "Landroidx/core/content/FileProvider;->attachInfo(Landroid/content/Context; Landroid/content/pm/ProviderInfo;)V --> Landroidx/core/content/FileProvider;->getPathStrategy(Landroid/content/Context; Ljava/lang/String; I)Landroidx/core/content/FileProvider$PathStrategy; --> Landroidx/core/content/FileProvider;->parsePathStrategy(Landroid/content/Context; Ljava/lang/String; I)Landroidx/core/content/FileProvider$PathStrategy; --> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;"
        }
      ]
    },
    {
      "id": "ObfuscationMissing",
      "name": "Not sufficient code obfuscation",
      "description": "The app seems not using sufficient code obfuscation.",
      "remediation": null,
      "references": null,
      "owasp": [
        "M7",
        "M9"
      ],
      "cvss": {
        "attack_vector": "Local",
        "attack_complexity": "High",
        "privileges_required": "Low",
        "user_interaction": "Required",
        "scope": "Unchanged",
        "confidentiality_impact": "High",
        "integrity_impact": "High",
        "availability_impact": "None"
      },
      "code": [
        {
          "what": "ASCII Obfuscation: 0.00% Renaming Obfuscation: 5.56%",
          "where": "application",
          "full_path": "application"
        }
      ]
    },
    {
      "id": "WebViewAddJavaScriptInterface",
      "name": "Checking Java code execution from WebView",
      "description": "`\"addJavascriptInterface\"` method was found in the code. Use of this method in a WebView containing untrusted content could allow an attacker to manipulate the host application in unintended ways, executing Java code with the permissions of the host application.",
      "remediation": "Use extreme care when using `\"addJavascriptInterface\"` method in a WebView which could contain untrusted content.",
      "references": {
        "text": "Further information can be found on the Android Developer Guide [[1]].",
        "links": {
          "1": "https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)"
        }
      },
      "owasp": [
        "M7"
      ],
      "cvss": {
        "attack_vector": "Network",
        "attack_complexity": "High",
        "privileges_required": "Low",
        "user_interaction": "Required",
        "scope": "Unchanged",
        "confidentiality_impact": "High",
        "integrity_impact": "None",
        "availability_impact": "None"
      },
      "code": [
        {
          "what": "Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V",
          "where": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V",
          "full_path": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V --> Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V"
        }
      ]
    },
    {
      "id": "WebViewAllowFileAccess",
      "name": "WebView Local File Access Attacks Checking",
      "description": "Found `setAllowFileAccess(true)` or not set (enabled by default) in WebView. The attackers could inject malicious script into WebView and exploit the opportunity to access local resources. ",
      "remediation": "This vulnerability can be mitigated by disabling local file system access (which is enabled by default) by setting `yourWebView.getSettings().setAllowFileAccess(false)`. This precaution disables the file system access only. Assets and resources are still accessible using URIs, like `file:///android_asset` and `file:///android_res`. The attackers can still use method `yourWebView.loadUrl(\"file:///data/data/[your_package_name]/[file]\");` to access app's local file.",
      "references": {
        "text": "Further information about this problem and possible countermeasures can be found in InfoSecurity Blog post [[1]] and in Android Reference Guide [[2]].",
        "links": {
          "1": "https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/",
          "2": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)"
        }
      },
      "owasp": [
        "M7"
      ],
      "cvss": {
        "attack_vector": "Network",
        "attack_complexity": "High",
        "privileges_required": "High",
        "user_interaction": "Required",
        "scope": "Unchanged",
        "confidentiality_impact": "Low",
        "integrity_impact": "Low",
        "availability_impact": "None"
      },
      "code": [
        {
          "what": "Landroid/webkit/WebSettings;->setAllowFileAccess(Z)V",
          "where": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V",
          "full_path": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V --> Landroid/webkit/WebSettings;->setAllowFileAccess(Z)V"
        }
      ]
    },
    {
      "id": "WebViewJavaScriptEnabled",
      "name": "WebView Potential XSS Attacks Checking",
      "description": "Found `\"setJavaScriptEnabled(true)\"` in WebView. Enabling JavaScript exposes to malicious injection of code that would be executed with the same permissions (XSS attacks).",
      "remediation": "If JavaScript is not necessary for your web page, please disable it (`\"setJavaScriptEnabled(false)\"`). Otherwise, in order to minimize the risk of XSS attacks, carefully review the web page code and sanitize the output presented in the WebView.",
      "references": {
        "text": "Further information on XSS attacks can be found in the OWASP documentation [[1]], while a guide for building secure web apps in Android can be found in the official documentation [[2]].",
        "links": {
          "1": "https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)",
          "2": "https://developer.android.com/guide/webapps/webview.html"
        }
      },
      "owasp": [
        "M7"
      ],
      "cvss": {
        "attack_vector": "Network",
        "attack_complexity": "High",
        "privileges_required": "Low",
        "user_interaction": "Required",
        "scope": "Unchanged",
        "confidentiality_impact": "High",
        "integrity_impact": "Low",
        "availability_impact": "None"
      },
      "code": [
        {
          "what": "Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V",
          "where": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V",
          "full_path": "Lcom/example/mastg_test0033/SupportedWebView;->onCreate(Landroid/os/Bundle;)V --> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V"
        }
      ]
    }
  ],
  "duration": "33.8 seconds"
}